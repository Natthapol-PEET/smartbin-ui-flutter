@echo off
setlocal enabledelayedexpansion

set "TASK=%1"
set "ARGS=%*"

:main
if defined TASK (
    call :task_%TASK% %ARGS%
    exit /b
)

echo usage: %~nx0 ^<task^> [^<..args^>]
echo task:
echo    cloneEngine |-- step-1 - flutter-engine-binaries-for-arm
echo    build |-- step-2 - flutter build bundle
echo    windowsSnapshot |-- step-3 - build snapshot
echo    linuxAppSo |-- step-4 - build app.so
echo    scpToPi |-- step-5 - transfer folder flutter_assets to pi
echo    remotePi |-- step-6 - remote raspberry pi
exit /b

:task_cloneEngine
git clone https://github.com/ardera/flutter-engine-binaries-for-arm.git
exit /b

:task_build
fvm flutter build bundle
exit /b

:task_windowsSnapshot
flutter pub get
"C:\Users\natth\fvm\default\bin\cache\dart-sdk\bin\dart.exe" ^
"C:\Users\natth\fvm\default\bin\cache\dart-sdk\bin\snapshots\frontend_server.dart.snapshot" ^
--sdk-root C:\Users\natth\fvm\default\bin\cache\artifacts\engine\common\flutter_patched_sdk_product ^
--target=flutter ^
--aot ^
--tfa ^
-Ddart.vm.product=true ^
--packages .dart_tool\package_config.json ^
--output-dill build\kernel_snapshot.dill ^
--verbose ^
--depfile build\kernel_snapshot.d ^
package:app_3_10_5/main.dart
exit /b

:task_linuxAppSo
/mnt/d/ku-csc/smartbin-gui-new/flutter-engine-binaries-for-arm/arm64/gen_snapshot_linux_x64_release ^
--deterministic ^
--snapshot_kind=app-aot-elf ^
--elf=build/flutter_assets/app.so ^
--strip ^
build/kernel_snapshot.dill
exit /b

:task_scpToPi
rem sudo apt install sshpass
sshpass -p "12345678" scp -r scp /mnt/d/ku-csc/smartbin-gui-new/app_3_10_5/build/flutter_assets pi@192.168.1.105:/home/pi
exit /b

:task_remotePi
sshpass -p "12345678" ssh pi@192.168.1.105
rem flutter-pi --release flutter_assets
exit /b
